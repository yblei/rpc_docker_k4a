FROM nvidia/opengl:1.2-glvnd-devel-ubuntu18.04

# This is the key breakthrough from UOsaka-Harada-Laboratory!
# nvidia/opengl base provides the OpenGL 4.4 context needed by Azure Kinect depth engine

ENV DEBIAN_FRONTEND=noninteractive

# Essential system packages including build tools for pyk4a
RUN apt update -y && apt install -y --no-install-recommends \
    curl \
    wget \
    gnupg \
    lsb-release \
    python3 \
    python3-pip \
    python3-setuptools \
    python3-dev \
    build-essential \
    cmake \
    ninja-build \
    pkg-config \
    libusb-1.0-0-dev \
    && rm -rf /var/lib/apt/lists/*

# Microsoft packages repository (same as UOsaka approach)
RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
RUN echo "deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod bionic main" >> /etc/apt/sources.list

# Install Azure Kinect SDK with dev headers (same versions as UOsaka)
RUN apt update -y && ACCEPT_EULA=Y apt install -y \
    k4a-tools=1.4.2 \
    libk4a1.4=1.4.2 \
    libk4a1.4-dev=1.4.2 \
    && rm -rf /var/lib/apt/lists/*

# Install Python packages (opencv first as it's large)
RUN pip3 install --upgrade pip
RUN pip3 install opencv-contrib-python numpy

# Try simpler pyk4a installation approaches
RUN pip3 install pyk4a --no-cache-dir || \
    pip3 install --no-binary pyk4a pyk4a || \
    echo "pyk4a installation failed, will test with system k4aviewer"

# Ensure depth engine library is accessible
RUN echo "/usr/lib/x86_64-linux-gnu/libk4a1.4" >> /etc/ld.so.conf.d/libk4a.conf
RUN ldconfig

# Set up environment for optimal performance
ENV LD_LIBRARY_PATH="/usr/lib/x86_64-linux-gnu/libk4a1.4:/usr/local/lib:$LD_LIBRARY_PATH"

# Create working directory
WORKDIR /workspace

# Add helpful commands to bash history for testing
RUN echo "k4aviewer" >> ~/.bash_history
RUN echo "python3 -c \"import pyk4a; k4a = pyk4a.PyK4A(); k4a.start(); print('Success!')\"" >> ~/.bash_history
RUN echo "python3 test_depth.py" >> ~/.bash_history

# Default command
CMD ["/bin/bash"]
