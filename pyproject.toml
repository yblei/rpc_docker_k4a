[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rpc-docker-k4a"
version = "1.0.0"
description = "Azure Kinect Remote Procedure Call Docker Package - Comprehensive depth sensing with XML-RPC server"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Azure Kinect RPC Team", email = "support@example.com"}
]
maintainers = [
    {name = "Azure Kinect RPC Team", email = "support@example.com"}
]
keywords = [
    "azure-kinect", 
    "depth-sensing", 
    "rpc", 
    "docker", 
    "computer-vision", 
    "3d-camera",
    "remote-sensing",
    "xml-rpc"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: System :: Hardware :: Hardware Drivers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: POSIX :: Linux",
    "Environment :: Console",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "opencv-python>=4.5.0",
    "pyk4a>=1.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.950",
    "pre-commit>=2.20.0",
]
docker = [
    "docker>=6.0.0",
]
examples = [
    "matplotlib>=3.5.0",
    "jupyter>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/azure-kinect/rpc-docker-k4a"
Documentation = "https://rpc-docker-k4a.readthedocs.io"
Repository = "https://github.com/azure-kinect/rpc-docker-k4a.git"
"Bug Tracker" = "https://github.com/azure-kinect/rpc-docker-k4a/issues"
Changelog = "https://github.com/azure-kinect/rpc-docker-k4a/blob/main/CHANGELOG.md"

[project.scripts]
k4a-rpc-server = "rpc_docker_k4a.server:main"
k4a-rpc-client = "rpc_docker_k4a.client:main"
k4a-combined = "rpc_docker_k4a.combined:main"

[tool.setuptools.packages.find]
include = ["rpc_docker_k4a*"]
exclude = ["tests*", "archive*"]

[tool.setuptools.package-data]
"rpc_docker_k4a" = [
    "docker/*",
    "*.rules",
    "*.sh",
    "*.md"
]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | archive
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=rpc_docker_k4a",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "hardware: marks tests that require Azure Kinect hardware",
    "docker: marks tests that require Docker",
]

[tool.coverage.run]
source = ["rpc_docker_k4a"]
omit = [
    "*/tests/*",
    "*/archive/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
